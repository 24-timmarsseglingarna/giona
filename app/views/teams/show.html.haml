%h1= @team.name

.panel{:class => "#{panel_context(@status['regatta'])}"}
  .panel-heading
    Regatta
  .panel-body
    .legend Regatta:
    %p
      %i.fa.fa-trophy(aria-hidden='true')
      =link_to @team.race.regatta.name, @team.race.regatta
    .legend Arrangör:
    %p
      %i.fas.fa-university(aria-hidden='true')
      = @team.race.regatta.organizer.name
      .legend Startnummer:
      %p
        %i.far.fa-file-alt(aria-hidden='true')
        -unless @team.start_number.nil? || @team.start_number == 0
          = @team.start_number
        - else
          Sätts senare
      - unless @team.plaque_distance.nil?
        .legend Plakettdistans:
        %p
          %i.fa.fa-trophy(aria-hidden='true')
          = @team.plaque_distance unless @team.plaque_distance.nil?
          M.
      .legend Status på seglingen (enligt mobilappen):
      %p
        %i.fas.fa-file(aria-hidden='true')
        = I18n.t("teams.sailing_state.#{@team.sailing_state}")
      .legend Status på anmälan:
      %p
        %i.fas.fa-file(aria-hidden='true')
        - if @team.draft?
          Utkast (syns inte i startlistan)
          -if @status.blank? && i_may_see_links_to( @team ) && current_user
            %p
              Din anmälan är tillräckligt ifylld för att skickas in till arrangören.
              Den blir då synlig i startlistan. Du kan gå tillbaka och ändra uppgifter och lägga till besättningsmedlemmar.
            %p
              Genom att skicka in anmälan intygar du att uppgifterna är korrekta och att båt och besättning uppfyller reglernas krav. Reglerna finns på arrangörens webbsida.
            =link_to 'Skicka in anmälan', teams_submit_path(:id => @team.id), method: :post, class: "btn btn-primary btn-lg"
        - elsif @team.submitted?
          Inskickad (syns i startlistan)
          - if @status.blank? && i_may_see_links_to( @team ) && current_user
            %p
              Din anmälan är inskickad till arrangören som kommer att granska och godkänna den. Normalt sker det innan start men om du anmäler dig sent kan det ske efter seglingen.
            %p
              Du kan ändra alla uppgifter i anmälan men om du byter skeppare, båt eller handikapp så behöver du uttryckligen skicka in den igen.
            %p
              För att din anmälan ska vara giltig ska du betala in startavgiften. Se arrangörens webbsida och seglingshandlingar hur du betalar den.
            %p
              Du kan dra tillbaka anmälan. Då försvinner båten från startlistan. Anmälan finns kvar med status 'utkast' så du kan återanmäla dig.
          - if has_officer_rights?
            %br
            %p
            = link_to 'Godkänn anmälan', teams_approve_path(:id => @team.id), method: :post, class: "btn btn-primary btn-lg"
        - elsif @team.approved?
          Godkänd (av arrangören)
          %p Du kan ändra alla uppgifter i anmälan men om du byter skeppare, båt eller handikapp så behöver du uttryckligen skicka in den igen.
          %p För att din anmälan ska vara giltig ska du betala in startavgiften. Se arrangörens webbsida och seglingshandlingar hur du betalar den.
          %p Om du får förhinder och inte startar eller avbryter seglingen så ska du anmäla det till arrangören.

        - if i_may_see_links_to( @team )
          %br
          %p
          - if @team.draft?
            = link_to 'Radera anmälan helt.', @team, :method => :delete, :class => "btn btn-default", :data => {:confirm => "Är du säker på att du vill radera deltagaransökan? Om du ångrar dig måste du fylla i den igen."}
          - elsif @team.submitted?
            = link_to 'Dra tillbaka anmälan, gör den till ett utkast.', teams_draft_path(:id => @team.id), method: :post, :data => {:confirm => "Är du säker på att du vill dra tillbaka deltagaranmälan? Båten kommer att försvinna från startlistan men finnas kvar med status 'utkast'. Du kan skicka in anmälan igen."}
          - elsif @team.approved?
            - if has_officer_rights?
              %p Arrangör: Om något är fel i anmälan kan du ta bort godkännandet och skicka tilbaka den till status 'utkast'. Anmälan försvinner då från startlistan. Du måste själv kommunicera med deltagaren vad hen ska göra för att få den godkänd igen.
              = link_to 'Ta bort godkännande. Åter till utkast.', teams_draft_path(:id => @team.id), method: :post, :class => 'btn btn-danger', :data => {:confirm => "Är du säker på att du vill dra tillbaka deltagaranmälan? Båten kommer att försvinna från startlistan men finnas kvar med status 'utkast'. Deltagaren kan skicka in anmälan igen."}

.panel{:class => "#{panel_context(@status['race'])}"}
  .panel-heading
    Seglingen
  .panel-body
    .legend Segling:
    %p
      %i.fa.fa-bell(aria-hidden='true')
      - if @team.race.description.present?
        = @team.race.description
      - else
        = @team.race.period

    .legend Starttid:
    %p
      %i.far.fa-clock(aria-hidden='true')
      = race_start(@team.race)
    .legend Seglingsperiod:
    %p
      %i.far.fa-hourglass(aria-hidden='true')
      = @team.race.period
      timmar
    - if i_may_see_links_to @team
      =link_to 'Ändra', edit_team_path(@team, :section=>:race), class: "btn btn-default"

.panel{:class => "#{panel_context(@status['race_details'])}"}
  .panel-heading
    Seglingsdetaljer
  .panel-body
    - unless @status['race_details'].blank?
      %p.status
        %i.fas.fa-exclamation-circle(aria-hidden='true')
        = @status['race_details']
    .legend Startplats:
    %p
      %i.fa.fa-flag(aria-hidden='true')
      = @team.start_point
      = name_by_number(@team.race.regatta.terrain, @team.start_point) unless @team.start_point.blank?
    .legend Mål:
    %p
      %i.fa.fa-flag-checkered(aria-hidden='true')
      - if @team.race.common_finish.present?
        = @team.race.common_finish
        = name_by_number @team.race.regatta.terrain, @team.race.common_finish
        (gemensam målgång)
      - else
        - unless @team.start_point.blank?
          = @team.start_point
          = name_by_number @team.race.regatta.terrain, @team.start_point
        (samma som startplatsen)


      .legend Havs-/kustsegling:
      %p
        %i.fas.fa-exchange-alt(aria-hidden='true')
        = @team.offshore_name
      - if i_may_see_links_to @team
        - if @status['race_details'].blank?
          =link_to 'Ändra', edit_team_path(@team, :section=>:race_details), class: "btn btn-default"
        - else
          =link_to 'Ändra', edit_team_path(@team, :section=>:race_details), class: "btn btn-primary"

.panel{:class => "#{panel_context(@status['crew'])}"}
  .panel-heading
    Besättningen
  .panel-body
    - unless @status['crew'].blank?
      %p.status
        %i.fas.fa-exclamation-circle(aria-hidden='true')
        = @status['crew']

    .legend Skeppare:
    %p
      %i.fa.fa-user-circle(aria-hidden='true')
      - unless @team.skipper.nil?
        = link_to(@team.skipper.name, @team.skipper)
        %br
        - unless @team.skipper.phone.blank?
          =@team.skipper.phone
          %br
        -unless @team.skipper.email.blank?
          =@team.skipper.email
          %br
        -unless @team.skipper.street.blank?
          =@team.skipper.street
          %br
        -unless @team.skipper.zip.blank? && @team.skipper.city.blank?
          #{@team.skipper.zip} #{@team.skipper.city}
          %br
        -unless (@team.skipper.country == 'SE') || (@team.skipper.country == 'Sverige') || @team.skipper.country.blank?
          =I18n.t(@team.skipper.country, :scope => :countries)
        - if !@team.skipper.valid? && current_user
          - if current_user.person == @team.skipper
            %p
              = link_to 'Komplettera kontaktuppgifter', edit_person_url(@team.skipper), class: 'btn btn-primary'
      - else
        Saknas. Utse någon av gastarna till skeppare.

    .legend Gastar:
    - unless @team.seamen.empty?
      %table
        - for person in @team.seamen do
          %tr
            %td
              %i.far.fa-user-circle(aria-hidden='true')
              = link_to person.name, person
            - if i_may_see_links_to @team
              %td
                %span.crew_action
                  %i.fas.fa-user-times(aria-hidden='true')
                  =link_to 'ta bort ur besättningen', teams_remove_seaman_path(:id => @team.id, :person_id => person.id), method: :post, :data => { :confirm => "Är du säker på att du vill ta bort #{person.name} från besättningsllistan?" }
              %td
                %span.crew_action
                  %i.fa.fa-chevron-circle-up(aria-hidden='true')
                  =link_to 'utse till ny skeppare', teams_set_skipper_path(:id => @team.id, :person_id => person.id), method: :post, :data => { :confirm => "Är du säker på att du vill utse #{person.name} till ny skeppare?" }
              %td
                - if ! person.valid?
                  %span.crew_action
                    %i.fas.fa-exclamation-circle(aria-hidden='true')
                    behöver komplettera kontaktuppgifter


    - if i_may_see_links_to @team
      %br
      %i.fas.fa-user-plus(aria-hidden='true')
      =link_to 'lägg till gast', edit_team_path(@team, :section=>:crew)

    %p
    .legend Söker gastar:
    %p
      %i.fa.fa-user-secret(aria-hidden='true')
      -unless @team.vacancies.blank?
        = @team.vacancies
      -else
        Nej.
      - if i_may_see_links_to @team
        %i.fas.fa-pencil-alt(aria-hidden='true')
        = link_to 'Ändra', edit_team_path(@team, :section=>:vacancies)

.panel{:class => "#{panel_context(@status['boat'])}"}
  .panel-heading
    Båten
  .panel-body
    - unless @status['boat'].blank?
      %p.status
        %i.fas.fa-exclamation-circle(aria-hidden='true')
        = @status['boat']
    %p
      %i.fa.fa-ship(aria-hidden='true')
      - if @team.boat.nil?
        -if i_may_see_links_to @team
          %i.fa.fa-plus-circle(aria-hidden='true')
          =link_to 'lägg till båt', edit_team_path(@team, :section=>:boat)
      -else
        = link_to "#{@team.boat.name} | #{@team.boat.boat_type_name} | Segelnummer: #{@team.boat.sail_number}", @team.boat
        - if i_may_see_links_to @team
          %i.fas.fa-times-circle(aria-hidden='true')
          =link_to 'ta bort båten', teams_remove_boat_path(:id => @team.id), method: :post, :data => {:confirm => "Är du säker på att du vill ta bort båten #{@team.boat.name} från deltagaranmälan?"}

    .legend Handikapp:
    %p
      %i.fa.fa-calculator(aria-hidden='true')
      -if @team.boat.nil? && i_may_see_links_to(@team)
        Välj först båt, sedan handikapp.
      -else
        - if @team.handicap_type.blank?
          inget handikapp valt
          -if i_may_see_links_to(@team)
            %i.fas.fa-plus(aria-hidden='true')
            = link_to 'Lägg till handikapp', edit_handicap_team_path(step: 1)
        - elsif @team.handicap_type == 'SoonSrsCertificate'
          Kommer att skaffa SRS-mätbrev. Tills vidare ansätts SXK-tal: 2.00
        - elsif @team.handicap_type == 'SoonSxkCertificate'
          Kommer att skaffa SXK-mätbrev. Tills vidare ansätts SXK-tal: 2.00
        - else
          - if @team.handicap.present?
            SXK-tal
            = number_with_precision(@team.handicap.sxk, precision: 2)
            för
            - unless @team.handicap.boat_name.blank?
              #{@team.handicap.boat_name}, #{@team.handicap.name},
            - else
              = @team.handicap.name
            enligt
            #{Handicap.short_types[@team.handicap.type]}
            - if @team.handicap.srs
              (SRS-tal: #{number_with_precision(@team.handicap.srs, precision: 3)} )
          - else
            Uppgiften om handikapp är inte komplett.
        -if i_may_see_links_to(@team) && @team.handicap_type.present?
          %i.fas.fa-pencil-alt(aria-hidden='true')
          = link_to 'Ändra handikapp', edit_handicap_team_path(step: 1)

.panel{:class => "#{panel_context(@status['logbook'])}"}
  .panel-heading
    Loggbok
  .panel-body
    -if (i_may_see_links_to(@team) && can_register_logbook(@team) || has_officer_rights? && @team.state != 'draft')
      %p
        %i.fa.fa-plus-circle(aria-hidden='true')
        - if current_user
          = link_to 'Registrera/ändra loggbok', logbook_link(@team)

    -logbook = get_logbook(@team, @logs)
    -unless logbook[:entries].blank?
      %table#giona-logs.table.table-striped.table-bordered.table-hover{:width => "100%"}
        %thead
          %tr
            %th Datum/tid
            %th Punkt
            %th Distans
            %th Fart
            %th Vind
            %th Notering
            - if params[:rich]
              %th User
              %th Client
              %th Data
        %tbody
        - logbook[:entries].each do |e|
          - log = e[:log]
          - log_data = e[:log_data]
          %tr{:class => cycle('even', 'odd')}
            %td
              - unless log.type == 'AdminLog'
                = I18n.l(log.time, format: :normal)
            %td
              - unless log.point.blank?
                - if e[:leg_status].nil?
                  %span.badge
                    = log.point
                - else
                  %span.badge.alert-danger
                    = log.point
                = log.team.race.regatta.terrain.points.find_by( number: log.point).name
            %td
              - if log.point
                = e[:distance]
            %td
              - if log.point && !e[:speed].nil?
                = e[:speed].round(1)
            %td= log.wind
            %td
              - if e[:leg_status] == :too_many_rounds
                %em
                  Punkt #{log.point} har rundats mer än 2 gånger.
                  %br
                  Sträckan räknas därför inte. Se §7.3, §13.1.3 i RR-2018.
                  %br
              - if e[:leg_status] == :too_many_legs
                %em
                  Sträckan mellan #{e[:prev_point]} och #{log.point} har seglats mer än 2 gånger.
                  %br
                  Sträckan räknas därför inte. Se §7.5, §13.1.2 i RR-2018.
                  %br
              - if e[:leg_status] == :no_leg
                %em
                  Mellan #{e[:prev_point]} och #{log.point} finns ingen giltig sträcka.
                  %br
              - if (current_user && (has_assistant_rights? || (@team.people.include? current_user.person)))
                - unless log.position.blank?
                  = log.position
                  %br
                - teams = log.teams
                - if teams
                  - for team in log.teams
                    %span.badge.alert-success
                      Startnr
                      = team.start_number
                    = team.boat_type_name
                    = team.boat_sail_number
                    = team.boat_name
                    %br
                - if log.log_type == 'retire' && logbook[:state] == :dns
                  Startar inte (DNS).
                - if log.log_type == 'retire' && logbook[:state] == :dnf
                  Avbryter seglingen (DNF).
                  %br
                - if log.log_type == 'protest'
                  - if log_data['protest']['team']
                    - suspected_team = log.team.race.regatta.teams.find_by( id: log_data['protest']['team'])
                  - else
                    - suspected_team = log.team.race.regatta.teams.find_by( start_number: log_data['protest']['boat'])
                  Protest mot misstänkt regelbrott.
                  %br
                  %span.badge.alert-danger
                    Startnr
                    = suspected_team.start_number
                  = suspected_team.boat_type_name
                  = suspected_team.boat_sail_number
                  = suspected_team.boat_name
                  %br
                - if log.log_type == 'sign'
                  Loggboken signerad.
                  %br
                - if log.log_type == 'endOfRace'
                  Seglingsperioden slut.
                  %br
                - unless log.sails.blank?
                  = log.sails
                  %br
                - unless log_data['lanterns'].blank?
                  = 'Tänder lanternorna.' if (log_data['lanterns'] == 'on')
                  = 'Släcker lanternorna.' if (log_data['lanterns'] == 'off')
                  %br
                - unless log_data['interrupt'].blank?
                  = I18n.t("logs.interrupt.#{log_data['interrupt']['type']}")
                  %br
                -unless log_data['engine'].blank?
                  = 'Startar motor för laddning.' if (log_data['engine'] == 'on')
                  = 'Stänger av motor för laddning.' if (log_data['engine'] == 'off')
                  %br
                - unless log_data['finish'].blank?
                  Målgång
                  %br
                - if log.type == 'AdminLog'
                  %em
                    - if log.log_type == 'adminDist'
                      = "Distansavdrag: #{log_data['admin_dist']}M"
                      %br
                    - if log.log_type == 'adminTime'
                      = "Tidstillägg: #{log_data['admin_time']} minuter"
                      %br
                    - if log.log_type == 'adminDSQ'
                      = 'Ogiltig segling'
                      %br
                    - unless log_data['comment'].blank?
                      = log_data['comment']
                - else
                  -unless log_data['comment'].blank?
                    = log_data['comment']
              - else
                - teams = log.teams
                - if teams
                  - for team in log.teams
                    %span.badge.alert-success
                      Startnr
                      = team.start_number
                    = team.boat_type_name
                    = team.boat_sail_number
                    = team.boat_name
                    %br
            - if params[:rich] && current_user
              - if has_assistant_rights?
                %td= log.user_id
                %td= log.client
                %td= log.data
      %hr
        %b Seglad distans:
        #{logbook[:sailed_dist].round(1)} M
      %br
      - if logbook[:early_start_dist] != 0
        %b Avdrag för tidig start:
        #{logbook[:early_start_dist].round(1)} M
        (#{logbook[:early_start_time]} min)
        %br
      - if logbook[:late_finish_dist] != 0
        %b Avdrag försening:
        #{logbook[:late_finish_dist].round(1)} M
        (#{logbook[:late_finish_time]} min)
        %br
      - if logbook[:compensation_dist] != 0
        %b Tillägg undsättning:
        #{logbook[:compensation_dist].round(1)} M
        %br
      - if @team.signed?
        %b Godkänd distans:
        #{logbook[:approved_dist].round(1)} M
      %hr
      - if logbook[:admin_dist] != 0
        %b Distansavdrag:
        #{logbook[:admin_dist]} M
        %br
      %b Plakettdistans:
      #{logbook[:plaque_dist].round(1)} M
      %br
      - if !logbook[:signed]
        %em Loggboken är inte signerad
      - if logbook[:state] == :early_finish
        %em För kort segling
      - if logbook[:state] == :dns
        %em Startade inte (DNS)
      - if logbook[:state] == :dnf
        %em Avbröt seglingen (DNF)
      - if logbook[:state] == :dsq
        %em Seglingen ogiltigförklarad

      - if @team.signed? && has_officer_rights?
        %br
        %p
        = link_to 'Loggboken granskad', teams_review_path(:id => @team.id), method: :post, class: "btn btn-primary"


- if current_user && i_may_see_links_to(@team)
  %h5 Ändringar:
  %ol.notes
    - for note in @notes
      %li
        = "#{I18n.l note.created_at, format: :normal}:"
        = note.description
  - if (@team.notes.count > 5) && !params[:notes].present?
    %p= link_to 'Visa alla', :notes => true
